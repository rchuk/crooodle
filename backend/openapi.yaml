openapi: 3.0.1
info:
  title: Crooodle
  version: 0.1.0
servers:
- url: http://localhost:8080
  description: Generated server url
security:
- Bearer: []
paths:
  /admin/world-regions/{id}:
    get:
      tags:
      - world-region-admin-controller
      operationId: getWorldRegionAdmin
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/WorldRegionAdminResponseDto"
    put:
      tags:
      - world-region-admin-controller
      operationId: editWorldRegion
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorldRegionEditRequestDto"
        required: true
      responses:
        "200":
          description: OK
    delete:
      tags:
      - world-region-admin-controller
      operationId: deleteWorldRegion
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
  /admin/rooms/{id}:
    get:
      tags:
      - room-admin-controller
      operationId: getRoomAdmin
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RoomAdminResponseDto"
    put:
      tags:
      - room-admin-controller
      operationId: editRoom
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomEditRequestDto"
        required: true
      responses:
        "200":
          description: OK
    delete:
      tags:
      - room-admin-controller
      operationId: deleteRoom
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /admin/hotels/{id}:
    get:
      tags:
      - hotel-admin-controller
      operationId: getHotelAdmin
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/HotelAdminResponseDto"
    put:
      tags:
      - hotel-admin-controller
      operationId: editHotel
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HotelEditRequestDto"
        required: true
      responses:
        "200":
          description: OK
    delete:
      tags:
      - hotel-admin-controller
      operationId: deleteHotel
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /admin/countries/{id}:
    get:
      tags:
      - country-admin-controller
      operationId: getCountryAdmin
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CountryAdminResponseDto"
    put:
      tags:
      - country-admin-controller
      operationId: editCountry
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CountryEditRequestDto"
        required: true
      responses:
        "200":
          description: OK
    delete:
      tags:
      - country-admin-controller
      operationId: deleteCountry
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
  /auth/register:
    post:
      tags:
      - auth-controller
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegisterRequestDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicValidationErrorDto"
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessTokenResponseDto"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicErrorDto"
      security: []
  /auth/login:
    post:
      tags:
      - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLoginRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AccessTokenResponseDto"
      security: []
  /admin/world-regions:
    get:
      tags:
      - world-region-admin-controller
      operationId: listWorldRegionsAdmin
      parameters:
      - name: query
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: string
          example: 0
        example: 0
      - name: limit
        in: query
        required: false
        schema:
          type: string
          example: 10
        example: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageResponseDtoWorldRegionAdminResponseDto"
    post:
      tags:
      - world-region-admin-controller
      operationId: createWorldRegion
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorldRegionCreateRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
  /admin/rooms:
    get:
      tags:
      - room-admin-controller
      operationId: listRoomsAdmin
      parameters:
      - name: hotelId
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: query
        in: query
        required: false
        schema:
          type: string
      - name: roomTypeId
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: available
        in: query
        required: false
        schema:
          type: boolean
      - name: page
        in: query
        required: false
        schema:
          type: string
          example: 0
        example: 0
      - name: limit
        in: query
        required: false
        schema:
          type: string
          example: 10
        example: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageResponseDtoRoomAdminResponseDto"
    post:
      tags:
      - room-admin-controller
      operationId: createRoom
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomCreateRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
  /admin/hotels:
    get:
      tags:
      - hotel-admin-controller
      operationId: listHotelsAdmin
      parameters:
      - name: query
        in: query
        required: false
        schema:
          type: string
      - name: countryId
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        required: false
        schema:
          type: string
          example: 0
        example: 0
      - name: limit
        in: query
        required: false
        schema:
          type: string
          example: 10
        example: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageResponseDtoHotelAdminResponseDto"
    post:
      tags:
      - hotel-admin-controller
      operationId: createHotel
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HotelCreateRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
  /admin/countries:
    get:
      tags:
      - country-admin-controller
      operationId: listCountriesAdmin
      parameters:
      - name: query
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: string
          example: 0
        example: 0
      - name: limit
        in: query
        required: false
        schema:
          type: string
          example: 10
        example: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageResponseDtoCountryAdminResponseDto"
    post:
      tags:
      - country-admin-controller
      operationId: createCountry
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CountryCreateRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
  /world-regions:
    get:
      tags:
      - world-region-controller
      operationId: listWorldRegions
      parameters:
      - name: query
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: string
          example: 0
        example: 0
      - name: limit
        in: query
        required: false
        schema:
          type: string
          example: 10
        example: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageResponseDtoWorldRegionResponseDto"
  /world-regions/{id}:
    get:
      tags:
      - world-region-controller
      operationId: getWorldRegion
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/WorldRegionResponseDto"
  /hotels:
    get:
      tags:
      - hotel-controller
      operationId: listHotels
      parameters:
      - name: query
        in: query
        required: false
        schema:
          type: string
      - name: countryId
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        required: false
        schema:
          type: string
          example: 0
        example: 0
      - name: limit
        in: query
        required: false
        schema:
          type: string
          example: 10
        example: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageResponseDtoHotelResponseDto"
  /hotels/{id}:
    get:
      tags:
      - hotel-controller
      operationId: getHotel
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/HotelResponseDto"
  /hotels/rooms:
    get:
      tags:
      - room-controller
      operationId: listRooms
      parameters:
      - name: hotelId
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: query
        in: query
        required: false
        schema:
          type: string
      - name: roomTypeId
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: available
        in: query
        required: false
        schema:
          type: boolean
      - name: page
        in: query
        required: false
        schema:
          type: string
          example: 0
        example: 0
      - name: limit
        in: query
        required: false
        schema:
          type: string
          example: 10
        example: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageResponseDtoRoomResponseDto"
  /hotels/rooms/{id}:
    get:
      tags:
      - room-controller
      operationId: getRoom
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RoomResponseDto"
  /countries:
    get:
      tags:
      - country-controller
      operationId: listCountries
      parameters:
      - name: query
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: string
          example: 0
        example: 0
      - name: limit
        in: query
        required: false
        schema:
          type: string
          example: 10
        example: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageResponseDtoCountryResponseDto"
  /countries/{id}:
    get:
      tags:
      - country-controller
      operationId: getCountry
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CountryResponseDto"
components:
  schemas:
    WorldRegionEditRequestDto:
      type: object
      properties:
        name:
          maxLength: 500
          minLength: 1
          type: string
        countries:
          type: array
          items:
            type: integer
            format: int32
    RoomEditRequestDto:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        capacity:
          type: integer
          format: int32
        pricePerNight:
          type: number
          format: double
        description:
          type: string
    AmenitiesDto:
      type: object
      properties:
        wifi:
          type: boolean
        airConditioning:
          type: boolean
        tv:
          type: boolean
        minibar:
          type: boolean
        breakfastIncluded:
          type: boolean
        poolAccess:
          type: boolean
        parking:
          type: boolean
        gymAccess:
          type: boolean
    HotelEditRequestDto:
      type: object
      properties:
        name:
          type: string
        address:
          type: string
        countryId:
          type: string
        regionId:
          type: integer
          format: int32
        amenities:
          $ref: "#/components/schemas/AmenitiesDto"
    CountryEditRequestDto:
      type: object
      properties:
        name:
          maxLength: 300
          minLength: 1
          type: string
        worldRegionId:
          type: integer
          format: int32
    UserRegisterRequestDto:
      required:
      - email
      - name
      - password
      - registerType
      type: object
      properties:
        name:
          maxLength: 2147483647
          minLength: 3
          type: string
        email:
          type: string
        password:
          maxLength: 2147483647
          minLength: 8
          type: string
        registerType:
          type: string
          enum:
          - TRAVELER
          - HOTEL_OWNER
    PublicValidationErrorDto:
      type: object
      properties:
        message:
          type: string
        errors:
          type: object
          additionalProperties:
            type: string
    AccessTokenResponseDto:
      type: object
      properties:
        accessToken:
          type: string
    PublicErrorDto:
      type: object
      properties:
        message:
          type: string
    UserLoginRequestDto:
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          maxLength: 2147483647
          minLength: 8
          type: string
    WorldRegionCreateRequestDto:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 500
          minLength: 1
          type: string
        countries:
          type: array
          items:
            type: integer
            format: int32
    RoomCreateRequestDto:
      required:
      - name
      - roomTypeId
      type: object
      properties:
        name:
          type: string
        capacity:
          type: integer
          format: int32
        pricePerNight:
          type: number
          format: double
        description:
          type: string
        roomTypeId:
          type: integer
          format: int32
    HotelCreateRequestDto:
      required:
      - address
      - name
      type: object
      properties:
        name:
          type: string
        address:
          type: string
        countryId:
          type: integer
          format: int32
        regionId:
          type: integer
          format: int32
        amenities:
          $ref: "#/components/schemas/AmenitiesDto"
    CountryCreateRequestDto:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 300
          minLength: 1
          type: string
        worldRegionId:
          type: integer
          format: int32
    PageResponseDtoWorldRegionResponseDto:
      type: object
      properties:
        total:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: "#/components/schemas/WorldRegionResponseDto"
    WorldRegionResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        countryCount:
          type: integer
          format: int32
    CountryResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        worldRegion:
          $ref: "#/components/schemas/WorldRegionResponseDto"
    HotelResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        address:
          type: string
        country:
          $ref: "#/components/schemas/CountryResponseDto"
        amenities:
          $ref: "#/components/schemas/AmenitiesDto"
    PageResponseDtoHotelResponseDto:
      type: object
      properties:
        total:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: "#/components/schemas/HotelResponseDto"
    PageResponseDtoRoomResponseDto:
      type: object
      properties:
        total:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: "#/components/schemas/RoomResponseDto"
    RoomResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        capacity:
          type: integer
          format: int32
        pricePerNight:
          type: number
          format: double
        description:
          type: string
        available:
          type: boolean
    PageResponseDtoCountryResponseDto:
      type: object
      properties:
        total:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: "#/components/schemas/CountryResponseDto"
    PageResponseDtoWorldRegionAdminResponseDto:
      type: object
      properties:
        total:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: "#/components/schemas/WorldRegionAdminResponseDto"
    WorldRegionAdminResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        countries:
          type: array
          items:
            $ref: "#/components/schemas/CountryResponseDto"
    PageResponseDtoRoomAdminResponseDto:
      type: object
      properties:
        total:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: "#/components/schemas/RoomAdminResponseDto"
    RoomAdminResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        capacity:
          type: integer
          format: int32
        pricePerNight:
          type: number
          format: double
        description:
          type: string
        available:
          type: boolean
    HotelAdminResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        address:
          type: string
        rankSum:
          type: integer
          format: int64
        rankCount:
          type: integer
          format: int32
        country:
          $ref: "#/components/schemas/CountryResponseDto"
    PageResponseDtoHotelAdminResponseDto:
      type: object
      properties:
        total:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: "#/components/schemas/HotelAdminResponseDto"
    CountryAdminResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        worldRegion:
          $ref: "#/components/schemas/WorldRegionResponseDto"
    PageResponseDtoCountryAdminResponseDto:
      type: object
      properties:
        total:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: "#/components/schemas/CountryAdminResponseDto"
  securitySchemes:
    Bearer:
      type: http
      scheme: Bearer
      bearerFormat: JWT
